version: "3.7"

services:
  db:
    restart: always
    image: postgres:latest
    container_name: mlflow_postgres
    expose: 
      - "5432"
    ports:
      - "5432:5432" 
    volumes: 
      - postgres_data:/var/lib/postgresql/data/ 
    networks: 
      - backend 
    environment: 
      - POSTGRES_USER=${PG_USER} 
      - POSTGRES_PASSWORD=${PG_PASSWORD} 
      - POSTGRES_DATABASE=${PG_DATABASE}
    healthcheck: 
      test: ["CMD", "pg_isready", "-p", "${PG_PORT}", "-U", "${PG_USER}"] 
      interval: 10s 
      timeout: 5s 
      retries: 3 
  
  s3: 
    restart: always 
    image: minio/minio:latest
    container_name: mlflow_minio 
    volumes: 
      - minio_data:/data 
    ports: 
      - "9000:9000" 
      - "9001:9001" 
    networks: 
      - frontend 
      - backend 
    environment: 
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server /data 
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"] 
      interval: 30s 
      timeout: 20s 
      retries: 3 
  
  mlflow: 
    restart: always 
    build:
      dockerfile: Dockerfile 
    image: mlflow_server 
    container_name: mlflow_server 
    depends_on: 
      - db 
    ports: 
      - "5000:5000" 
    networks: 
      - frontend 
      - backend 
    environment: 
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
      - MLFLOW_S3_IGNORE_TLS=true
      - MLFLOW_STORE_URI=postgresql://mlflow:mlflow@postgres/mlflow
    command: mlflow server --backend-store-uri postgresql://${PG_USER}:${PG_PASSWORD}@postgres:5432/${PG_DATABASE} --host 0.0.0.0 --serve-artifacts --artifacts-destination s3://${MLFLOW_BUCKET_NAME} 
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost:5000"] 
      interval: 30s 
      timeout: 10s
      retries: 3

volumes: 
  postgres_data: 
  minio_data: 

networks: 
  frontend: 
    driver: bridge 
  backend:
    driver: bridge
