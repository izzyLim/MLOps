version: "3.7"

networks:
  mlflow:

volumes:
  postgres_data:
  minio_data:

services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - mlflow
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address :9001

  create_minio_bucket:
    image: minio/mc
    container_name: create_minio_bucket
    depends_on:
      - minio
    networks:
      - mlflow
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/mlflow;
      exit 0;
      "

  postgresql:
    image: postgres:alpine
    container_name: postgresql
    ports:
      - 5434:5434
    networks:
      - mlflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mlflow-db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    hostname: postgresql
    command: -p 5434

  mlflow:
    build: .
    image: mlflow
    container_name: mlflow
    depends_on:
      - minio
      - create_minio_bucket
      - postgresql
    ports:
      - 5001:5000
    networks:
      - mlflow
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    command:
      - bash
      - -c
      - mlflow server
        --port 5000
        --host 0.0.0.0
        --backend-store-uri postgresql+psycopg2://postgres:postgres@postgresql:5434/mlflow
        --serve-artifacts
        --artifacts-destination s3://mlflow/
